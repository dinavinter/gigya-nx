name: Build wc packages
permissions:
  contents: read
on:
  push:
    branches:
      - main  # Change this to the branch you want to trigger the build on
  workflow_dispatch:

jobs:
  build:
    environment: deploy 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'pnpm'

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v4
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      - name: Build packages
        run: pnpm build --filter wc
      - name: Build packages
        run: pnpm build --filter wc

      - name: Set up npm authentication
        run: echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # Ensure git is clean before publish/bump
      - name: Commit changes if needed
        run: |
          git config --global user.email "ci-bot@example.com"
          git config --global user.name "CI Bot"
          git add .
          git diff-index --quiet HEAD || git commit -m "CI: commit changes before publish"

      # Your publish/bump step with --no-git-check
      - name: Publish
        run: npm publish --no-git-check

      - name: Publish and Bump version if package already exists
        shell: bash
        env:
          NPM_TOKEN: ${{env.NPM_TOKEN}}
        run: |
          if pnpm publish --access public --no-git-check; then
            echo "Published successfully"
          else
            echo "Version exists, bumping version"
            npm version patch
            pnpm publish --access public  --no-git-check
          fi

