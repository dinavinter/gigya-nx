export declare var _popupContainers: any[];
export declare var _pseudoContainers: any[];
export declare function getNextZIndex(): number;
export declare function getGigyaScriptElement(fileNames: string[]): HTMLScriptElement;
export declare function dispatch(el: HTMLElement, eventName: string): void;
export declare function addButtonSubmitListener(el: HTMLElement, handler: Function, event?: 'click' | 'touchend', debugName?: string): void;
export declare function addEventListener(el: any, eventName: string, handler: Function): void;
export declare function addActivationHandler(el: HTMLElement, handler: Function): void;
export declare function removeEventListener(el: any, eventName: string, handler: Function): void;
export declare function disableDefaultEventHandling(event: any): void;
export declare function addDialogBackListener(handler: (e: Event) => void): void;
export declare function _removeDialogBackListener(): void;
export declare function prependToBody(el: HTMLElement, document?: Document): void;
export declare function appendToBody(el: HTMLElement, document?: Document): void;
export declare function removeElement(el: HTMLElement): void;
export declare function isChildOf(child: Node, parent: Node): boolean;
export declare function isVisible(el: HTMLElement): boolean;
export declare function getCenteredDivID(name: string): string;
export declare function createElementWithAttributes(domElemName: string, domElemAttrs?: {
    [key: string]: string;
}): HTMLElement;
export declare function createTopLevelDiv(id?: string): HTMLDivElement;
export declare function hideByID(id: string): void;
export declare function showByID(id: string): void;
export declare function clearByID(id: string): void;
export declare function getHTMLSize(html: string, container: HTMLElement): {
    w: number;
    h: number;
};
export declare function getElementsByClass(parentElement: HTMLElement, className: string, includeParent?: boolean): HTMLElement[];
export declare function getElementsByAttribute(parentElement: HTMLElement, tagName: string, attributeName: string, attributeValue: string): HTMLElement[];
export declare function getElementPosition(el: HTMLElement): {
    left: number;
    top: number;
    right: number;
    bottom: number;
};
export declare function addClassToElement(el: HTMLElement, className: string): void;
export declare function removeClassFromElement(el: HTMLElement, className: string, substring?: boolean): void;
export declare function getClassNames(el: HTMLElement): Array<string>;
export declare function isElementClass(el: HTMLElement, className: string): boolean;
export declare function cancelEvent(event: any): void;
export declare function createElement(type: string, name: string): ChildNode;
export declare function setSize(container: HTMLElement, w: any, h: any, center?: boolean): void;
export declare function createHiddenIframe(src: string): HTMLIFrameElement;
export declare function attributeEncode(value: string): string;
export declare function manipulateAttributes(elements: Element[], matcher: RegExp, replacePredicate: (match: string) => void, criteria?: (attr?: Attr) => boolean): void;
export declare function textNodesUnder(el: HTMLElement): Text[];
export declare function isHTMLBooleanAttribute(attrName: string): boolean;
export declare function isBelongToGigyaFieldset(el: Element): boolean;
export declare function getClosestElement(elem: any, selector: any, parent?: Document): any;
export declare function createElementFromTemplate(template?: string): ChildNode;
export declare function isParentHasClass(nativeElement: HTMLElement, className: string): boolean;
